image: public.ecr.aws/docker/library/node:24

definitions:
  caches:
    pnpm:
      key:
        files:
          - pnpm-lock.yaml
      path: $BITBUCKET_CLONE_DIR/.pnpm-store
  steps:
    - step: &biome
        name: Biome
        runs-on:
          - 'self.hosted'
          - 'linux'
        script:
          - corepack enable
          - pnpm install
          - pnpm biome ci .
        caches:
          - pnpm
    - step: &deploy
        runs-on:
          - 'self.hosted'
          - 'linux'
        oidc: true
        caches:
          - pnpm
        script:
          # Configure OIDC
          - export AWS_REGION={{awsEnv.region}}
          - export AWS_ROLE_ARN={{deployRole.arn}}
          - export AWS_WEB_IDENTITY_TOKEN_FILE=$(pwd)/web-identity-token
          - echo $BITBUCKET_STEP_OIDC_TOKEN > $(pwd)/web-identity-token
          # Install terraform
          - TERRAFORM_VERSION=1.13.1
          - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          - rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          - mv terraform /usr/local/bin
          # Install dependencies
          - corepack enable
          - pnpm install
          # Deploy with CDK
          - pnpm cdktf deploy --app "node dist/env-$BITBUCKET_DEPLOYMENT_ENVIRONMENT.js" --auto-approve

pipelines:
  branches:
    main:
      - parallel:
          steps:
            - step: *biome
            - step:
                name: Build
                runs-on:
                  - 'self.hosted'
                  - 'linux'
                script:
                  - corepack enable
                  - pnpm install
                  - pnpm build
                caches:
                  - pnpm
                artifacts:
                  - dist/**
      - step:
          name: Deploy Assets
          runs-on:
            - 'self.hosted'
            - 'linux'
          oidc: true
          caches:
            - pnpm
          script:
            # Configure OIDC
            - export AWS_REGION={{awsEnv.region}}
            - export AWS_ROLE_ARN={{deployRole.arn}}
            - export AWS_WEB_IDENTITY_TOKEN_FILE=$(pwd)/web-identity-token
            - echo $BITBUCKET_STEP_OIDC_TOKEN > $(pwd)/web-identity-token
            # Install dependencies
            - corepack enable
            - pnpm install
            # Upload assets
            - node dist/upload-assets.js
          artifacts:
            - asset-manifest.json
      {%- if tenantsBootstrap.auth0Credentials.development %}
      - step:
          <<: *deploy
          name: Deploy Development
          deployment: test
      {%- endif %}
      {%- if tenantsBootstrap.auth0Credentials.staging %}
      - step:
          <<: *deploy
          name: Deploy Staging
          deployment: staging
          trigger: manual
      {%- endif %}
      {%- if tenantsBootstrap.auth0Credentials.production %}
      - step:
          <<: *deploy
          name: Deploy Production
          deployment: production
          trigger: manual
      {%- endif %}
  pull-requests:
    '**':
      - parallel:
          steps:
            - step: *biome
            - step:
                name: Type check
                runs-on:
                  - 'self.hosted'
                  - 'linux'
                script:
                  - corepack enable
                  - pnpm install
                  - pnpm tsc --noEmit
                caches:
                  - pnpm
